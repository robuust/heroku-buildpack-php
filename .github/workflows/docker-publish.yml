name: Docker

on:
  push:
    # Publish `robuust` branch to Container Registry
    branches: 'grpc'

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx        
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build & push image to GitHub Container Registry
        run: docker buildx build --pull --platform=linux/arm64,linux/amd64 --tag ghcr.io/robuust/heroku-php-build-heroku-22 --file $(pwd)/support/build/_docker/heroku-22.Dockerfile --push .

  # php81:
  #   # Ensure push job passes before pushing image.
  #   needs: push

  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push'

  #   steps:
  #     - name: Set up QEMU        
  #       uses: docker/setup-qemu-action@v2

  #     - name: Build & deploy ext-grpc for php 8.1
  #       run: docker run --platform=linux/arm64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20210902/grpc-1.54.0 --overwrite
      
  #     - name: Build & deploy ext-grpc for php 8.1 (x86)
  #       run: docker run --platform=linux/amd64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20210902/grpc-1.54.0 --name=extensions/no-debug-non-zts-20210902/grpc-1.54.0-x86 --overwrite

  #     - name: Build & deploy ext-protobuf for php 8.1
  #       run: docker run --platform=linux/arm64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20210902/protobuf-3.22.5 --overwrite
      
  #     - name: Build & deploy ext-protobuf for php 8.1 (x86)
  #       run: docker run --platform=linux/amd64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20210902/protobuf-3.22.5 --name=extensions/no-debug-non-zts-20210902/protobuf-3.22.5-x86 --overwrite

  php82:
    # Ensure push job passes before pushing image.
    needs: push

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v2

      - name: Build & deploy ext-grpc for php 8.2
        run: docker run --platform=linux/arm64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20220829/grpc-1.55.0RC1 --overwrite
      
      - name: Build & deploy ext-grpc for php 8.2 (x86)
        run: docker run --platform=linux/amd64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20220829/grpc-1.55.0RC1 --name=extensions/no-debug-non-zts-20220829/grpc-1.55.0RC1-x86 --overwrite

      # - name: Build & deploy ext-protobuf for php 8.2
      #   run: docker run --platform=linux/arm64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20220829/protobuf-3.23.0 --overwrite
      
      # - name: Build & deploy ext-protobuf for php 8.2 (x86)
      #   run: docker run --platform=linux/amd64 --rm -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" ghcr.io/robuust/heroku-php-build-heroku-22 deploy.sh extensions/no-debug-non-zts-20220829/protobuf-3.23.0 --name=extensions/no-debug-non-zts-20220829/protobuf-3.23.0-x86 --overwrite
